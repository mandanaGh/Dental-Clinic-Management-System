using System;
using System.Collections.Generic;
using System.Text;

namespace DataObjectLayer
{
    public class PatientDOL
    {
        public const string Select = @"SELECT PATIENT.PATIENTID, PATIENT.PATIENTCODE, PATIENT.FIRSTNAME, PATIENT.LASTNAME, PATIENT.GENDER, PATIENT.TEL, PATIENT.MOBILE, PATIENT.ADDRESS, PATIENT.INSURANCETYPEID, PATIENT.BIRTHDAY, PATIENT.EXPIREDDATE, PATIENT.INSURANCECODE, PATIENT.MARRIED, PATIENT.NATIONALCODE, INSURANCETYPE.INSURANCETYPETITLE, PATIENT.JOBID, PATIENT.ISUSESPECIALDRAG, PATIENT.ISPREGNANT, PATIENT.ISUNDERPHYSICIAN, PATIENT.PHISICIANDESCRIPTION, PATIENT.DATE, PATIENT.ISPENALERGIC, PATIENT.ISASPRINALERGIC, PATIENT.ISOUTDRAGALERGIC, PATIENT.ISOTHERALERGIC, PATIENT.RELEVANTNAME, PATIENT.DESCRIPTION, JOB.JOBTITLE, PATIENT.ISNORMAL FROM PATIENT INNER JOIN INSURANCETYPE ON PATIENT.INSURANCETYPEID = INSURANCETYPE.INSURANCETYPEID LEFT OUTER JOIN JOB ON PATIENT.JOBID = JOB.JOBID";
        public const string Insert = @"INSERT INTO PATIENT (PATIENTID,PATIENTCODE, FIRSTNAME, LASTNAME, GENDER, TEL, MOBILE, ADDRESS, INSURANCETYPEID, BIRTHDAY, EXPIREDDATE, INSURANCECODE, MARRIED, NATIONALCODE, JOBID, ISUSESPECIALDRAG, ISPREGNANT, ISUNDERPHYSICIAN, PHISICIANDESCRIPTION, DATE, ISPENALERGIC, ISASPRINALERGIC, ISOUTDRAGALERGIC, ISOTHERALERGIC, RELEVANTNAME , DESCRIPTION, ISNORMAL) VALUES (@PATIENTID,@PATIENTCODE,@FIRSTNAME,@LASTNAME,@GENDER,@TEL,@MOBILE,@ADDRESS,@INSURANCETYPEID,@BIRTHDAY,@EXPIREDDATE,@INSURANCECODE,@MARRIED,@NATIONALCODE, @JOBID,@ISUSESPECIALDRAG, @ISPREGNANT,@ISUNDERPHYSICIAN, @PHISICIANDESCRIPTION, @DATE, @ISPENALERGIC, @ISASPRINALERGIC, @ISOUTDRAGALERGIC, @ISOTHERALERGIC, @RELEVANTNAME, @DESCRIPTION, @ISNORMAL)";
        public const string Delete = "DELETE FROM PATIENT WHERE PATIENTID=@PATIENTID";
        public const string Update = "UPDATE PATIENT SET PATIENTCODE = @PATIENTCODE, FIRSTNAME = @FIRSTNAME, LASTNAME = @LASTNAME, GENDER = @GENDER, TEL = @TEL, MOBILE = @MOBILE, ADDRESS = @ADDRESS, INSURANCETYPEID = @INSURANCETYPEID, BIRTHDAY = @BIRTHDAY, EXPIREDDATE = @EXPIREDDATE, INSURANCECODE = @INSURANCECODE, MARRIED = @MARRIED, NATIONALCODE = @NATIONALCODE, JOBID = @JOBID, ISUSESPECIALDRAG = @ISUSESPECIALDRAG, ISPREGNANT = @ISPREGNANT, ISUNDERPHYSICIAN = @ISUNDERPHYSICIAN, PHISICIANDESCRIPTION = @PHISICIANDESCRIPTION, DATE = @DATE, ISPENALERGIC = @ISPENALERGIC, ISASPRINALERGIC = @ISASPRINALERGIC, ISOUTDRAGALERGIC = @ISOUTDRAGALERGIC, ISOTHERALERGIC = @ISOTHERALERGIC, RELEVANTNAME = @RELEVANTNAME, DESCRIPTION = @DESCRIPTION , ISNORMAL = @ISNORMAL WHERE PATIENTID=@PATIENTID";
        public const string SelectMaxId = "SELECT ISNULL(MAX(PATIENTID),0)+1 AS MAX_PATIENTID FROM PATIENT";
        public const string SelectToothColor = "SELECT TOOTHCOLOR FROM PATIENT WHERE PATIENTID = @PATIENTID";
        public const string UpdateToothColor = "UPDATE PATIENT SET TOOTHCOLOR = @TOOTHCOLOR WHERE PATIENTID = @PATIENTID";
        public const string SelectAlarm = "SELECT DISTINCT PATIENT.PATIENTID, PATIENT.FIRSTNAME, PATIENT.LASTNAME, PATIENT.TEL, SERVICETYPE.SERVICETYPETITLE, SERVICETYPE.SERVICETYPEID FROM PATIENT INNER JOIN SERVICE ON PATIENT.PATIENTID = SERVICE.PATIENTID INNER JOIN SERVICETYPE ON SERVICE.SERVICETYPEID = SERVICETYPE.SERVICETYPEID WHERE(SERVICE.ISFINISHED = 'True') AND (SERVICETYPE.NEXTREFRENCE <> 0) AND (DATEDIFF(d, SERVICE.DATE + SERVICETYPE.NEXTREFRENCE, GETDATE()) >= 0) AND (DATEDIFF(d, SERVICE.DATE + SERVICETYPE.NEXTREFRENCE, GETDATE()) <= 7)";
        public const string IsDangerous = "SELECT COUNT(*) FROM PATIENTDISEASES INNER JOIN DISEASES ON PATIENTDISEASES.DISEASESID = DISEASES.DISEASESID WHERE (PATIENTDISEASES.PATIENTID = @PATIENTID) AND  DISEASES.ISDANGEROUS = 'TRUE'";
        public enum QueryStatus { Select, Insert, Delete, Update, SelectMaxId, SelectToothColor, UpdateToothColor, SelectAlarm, IsDangerous };
    }
}
